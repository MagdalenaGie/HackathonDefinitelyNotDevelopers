[{"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\index.js":"1","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\App.js":"2","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\reportWebVitals.js":"3","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\store.js":"4","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\reducer.js":"5","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Layout\\Layout.js":"6","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\actionTypes.js":"7","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\SideBar\\SideBar.js":"8","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\actions.js":"9","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\AppBar\\AppBar.js":"10","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Grid\\Grid.js":"11","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Converter\\Converter.js":"12","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\History\\History.js":"13","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Stats\\Stats.js":"14","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Loading\\Backdrop\\Backdrop.js":"15","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Loading\\Spinner\\Spinner.js":"16"},{"size":828,"mtime":1610835005739,"results":"17","hashOfConfig":"18"},{"size":2293,"mtime":1610837021811,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1610802480539,"results":"20","hashOfConfig":"18"},{"size":298,"mtime":1610835005754,"results":"21","hashOfConfig":"18"},{"size":1799,"mtime":1610841082700,"results":"22","hashOfConfig":"18"},{"size":382,"mtime":1610802480527,"results":"23","hashOfConfig":"18"},{"size":694,"mtime":1610841082700,"results":"24","hashOfConfig":"18"},{"size":4978,"mtime":1610824727168,"results":"25","hashOfConfig":"18"},{"size":3477,"mtime":1610841082700,"results":"26","hashOfConfig":"18"},{"size":2886,"mtime":1610823666771,"results":"27","hashOfConfig":"18"},{"size":639,"mtime":1610806959201,"results":"28","hashOfConfig":"18"},{"size":11856,"mtime":1610841241531,"results":"29","hashOfConfig":"18"},{"size":2831,"mtime":1610812968548,"results":"30","hashOfConfig":"18"},{"size":3317,"mtime":1610841275836,"results":"31","hashOfConfig":"18"},{"size":718,"mtime":1610827876201,"results":"32","hashOfConfig":"18"},{"size":196,"mtime":1610827663707,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"n1rpqd",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\index.js",[],["73","74"],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\App.js",["75","76","77"],"import './App.css';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Layout from './components/Layout/Layout';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Converter from './components/Converter/Converter';\r\nimport History from './components/History/History';\r\nimport Stats from './components/Stats/Stats';\r\nimport { loadUser, predictText, fetchPlotSummary } from './store/actions';\r\n\r\nconst drawerWidth = 64;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        backgroundPositionY: '100%',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        color: 'black',\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: drawerWidth,\r\n        height: '100%'\r\n    },\r\n    plot: {\r\n        height: '100%',\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nexport default function App() {\r\n\r\n  useEffect(() => dispatch(loadUser()), []);\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n      </Layout>\r\n      <div className={classes.content}>\r\n        <Switch>\r\n              <Route exact path=\"/\" component={Converter} />\r\n              <Route exact path=\"/history\" component={History} />\r\n              <Route exact path=\"/statistics\" component={Stats} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n// export default function App() {\r\n//   useEffect(() => dispatch(loadUser()));\r\n\r\n//   const dispatch = useDispatch();\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Layout>\r\n//       </Layout>\r\n//       <div className={classes.content}>   \r\n//         <Switch>\r\n//               <Route exact path=\"/\" render={() => (\r\n//                 <Redirect to=\"/temp\" />\r\n//               )} />\r\n//               <Route exact path=\"/home\" component={Grid}></Route>\r\n//         </Switch>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuth: state.reducer.isAuthenticated\r\n// });\r\n\r\n// export default connect(mapStateToProps)(App);","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\reportWebVitals.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\store.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\reducer.js",["78"],"import * as actionTypes from './actionTypes';\r\n\r\nconst initialState = {\r\n    toggleDrawer: false,\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    summary: null,\r\n\r\n    history: null,\r\n\r\n    selectedImage: null,\r\n    imagePreviewUrl: null,\r\n\r\n    plotSummary: {\r\n        x: [],\r\n        y1: [],\r\n        y2: [],\r\n        y3: []\r\n    }\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.TOGGLE_DRAWER:\r\n            const prevDrawerToggle = state.toggleDrawer;\r\n            return {\r\n                ...state,\r\n                toggleDrawer: !prevDrawerToggle\r\n            }\r\n        case actionTypes.USER_LOADED:\r\n            localStorage.setItem('token', action.payload.token);\r\n            console.log(action.payload.token);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.TEXT_PREDICTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                summary: action.payload.summary\r\n            }\r\n        case actionTypes.FETCH_SUMMARY_START:\r\n        case actionTypes.TEXT_PREDICTION_START:\r\n        case actionTypes.USER_LOADING_START:\r\n        case actionTypes.FILE_PREDICTION_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case actionTypes.FILE_PREDICTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                summary: action.payload.summary\r\n            }\r\n        case actionTypes.FETCH_SUMMARY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                plotSummary: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Layout\\Layout.js",["79","80","81","82","83","84"],"import React, { Component, Fragment } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport SideBar from '../SideBar/SideBar';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default function Layout() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <SideBar>\r\n            </SideBar>\r\n        </Fragment >\r\n    );\r\n}","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\actionTypes.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\SideBar\\SideBar.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\store\\actions.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\AppBar\\AppBar.js",["85"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport logo from '../assets/logobook.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  logo: {\r\n    fontSize: \"36px\",\r\n    margin: '0 10px',\r\n    height: '45px',\r\n    fill: 'gold'\r\n  },\r\n  sectionDesktop: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Historia</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Statystyki</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar\r\n        className={props.appClass}>\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.toggle}\r\n            edge=\"start\"\r\n            className={props.toggleButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={logo} alt=\"logo\" className={classes.logo}></img>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            AppName\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Grid\\Grid.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Converter\\Converter.js",["86"],"import React from 'react';\r\nimport Grid from '../Grid/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {predictFile, predictText} from '../../store/actions';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport AddToQueueIcon from '@material-ui/icons/AddToQueue';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport './Converter.css';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 22,\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: '#eaeaf0',\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: '#ccc',\r\n      zIndex: 1,\r\n      color: '#fff',\r\n      width: 50,\r\n      height: 50,\r\n      display: 'flex',\r\n      borderRadius: '50%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n  });\r\n  \r\n  function ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    const icons = {\r\n      1: <InputIcon />,\r\n      2: <AddToQueueIcon />,\r\n      3: <DoneOutlineIcon />,\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  ColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n  };\r\n  \r\n  function getSteps() {\r\n    return ['Select input type', 'Add input in choosen type', 'Enjoy the result & save it for later'];\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n      },\r\n      instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n      },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 150,\r\n      },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    input :{\r\n      display: 'none'\r\n    }\r\n  }));\r\n\r\nconst Converter = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const summary = useSelector(state => state.reducer.summary);\r\n    const classes = useStyles();\r\n    const [file, setFile] = React.useState();\r\n    const [type, setType] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [filename, setFilename] = React.useState('');\r\n    const [text, setText] = React.useState('');\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setType(event.target.value);\r\n        handleFstToScd();\r\n    };\r\n\r\n    const handleSubmitProcessing = (event) => {\r\n        handleScdToThd();\r\n        if (type === \"text\") {\r\n            dispatch(predictText(text))\r\n        } else {\r\n            dispatch(predictFile(file));}\r\n    }\r\n\r\n    const handleFinish = (event) => {\r\n        handleReset()\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        handleReset()\r\n    }\r\n\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n  \r\n    const handleFstToScd = () => {\r\n      setActiveStep((prevActiveStep) => 1);\r\n    };\r\n  \r\n    const handleScdToThd = () => {\r\n      setActiveStep((prevActiveStep) => 2);\r\n    };\r\n  \r\n    const handleReset = () => {\r\n      setActiveStep(0);\r\n    };\r\n\r\n    const onInputChandler = (event) => {\r\n      setText(event.target.value);\r\n      console.log(text)\r\n    }\r\n\r\n\r\n    const stepsPath = (\r\n        <div className=\"card text-left DesktopOnly\">\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\"></p>\r\n                    <div className={classes.root}>\r\n                        <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                        </Stepper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n\r\n    const imageSelectedHandler = event => {\r\n        let reader = new FileReader();\r\n        let img = event.target.files[0];\r\n        setFilename(img.name);\r\n        console.log('Plik: ' + img.name);\r\n        reader.onloadend = () => {\r\n            setOpen(true);\r\n            setFile({\r\n                ...file,\r\n                selectedImage: img,\r\n                imagePreviewUrl: reader.result\r\n            });\r\n        }\r\n        reader.readAsDataURL(img);\r\n\r\n        console.log(img);\r\n    }\r\n\r\n    let userInput = null;\r\n    if(type === 'text'){\r\n        userInput = <div>\r\n            <textarea \r\n              className=\"form-control\" \r\n              id=\"exampleFormControlTextarea1\" \r\n              rows={10} \r\n              placeholder={\"Enter your text here...\"}\r\n              value={text}\r\n              onChange={(event) => onInputChandler(event)}>\r\n            </textarea>\r\n            <div className=\"card text-right\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Submit and proceed {type}</h5>\r\n                    <p className=\"card-text\"></p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        onClick={handleSubmitProcessing}\r\n                        endIcon={<SendIcon/>}>\r\n                        Let's make it shorter\r\n                    </Button>\r\n                </div>\r\n            </div><br/>\r\n        </div>\r\n    }else if (type ==='file'){\r\n        userInput = (\r\n            <div className=\"card text-right\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Load file:</h5>\r\n                    <div className={classes.root}>\r\n                        <input\r\n                            accept=\"image/*,application/pdf\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={imageSelectedHandler}\r\n                        />\r\n                        <p>{filename}</p>\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"secondary\" component=\"span\" endIcon={<CloudUploadIcon/>}>\r\n                            Upload\r\n                            </Button>\r\n                        </label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    const left = (\r\n        <div>\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Choose input type:</h5>\r\n                    <p className=\"card-text\"></p>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Input type</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={type}\r\n                                onChange={handleChange}\r\n                                label=\"Age\"\r\n                                >\r\n                            <MenuItem value=\"\">\r\n                                <em>Choose input type</em>\r\n                            </MenuItem>\r\n                            <MenuItem value={'text'}>Text</MenuItem>\r\n                            <MenuItem value={'file'}>PDF/JPG</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                </div>\r\n            </div><br/>\r\n\r\n            {userInput}\r\n        </div>\r\n    );\r\n\r\n    const right = (\r\n        <div>\r\n        <textarea\r\n            value={summary}\r\n            className=\"form-control\" \r\n            id=\"ex2\" \r\n            rows={10} ></textarea>\r\n            <br/>\r\n            <div className=\"card text-right\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Rate and save results (they will be stored in your history)</h5>\r\n                    <p className=\"card-text\"></p>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleFinish}\r\n                        className={classes.button}\r\n                        endIcon={<SaveIcon/>}>\r\n                        Save it, I'm satisfied\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleDelete}\r\n                        className={classes.button}\r\n                        endIcon={<DeleteIcon/>}>\r\n                        Delete fesult \r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return(\r\n        <div>  \r\n            {stepsPath}<br/>\r\n            <Grid left={left} right ={right}/>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                Your photo has been uploaded!\r\n              </Alert>\r\n            </Snackbar>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Converter;","D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\History\\History.js",[],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Stats\\Stats.js",["87"],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Loading\\Backdrop\\Backdrop.js",[],["88","89"],"D:\\HACKATON\\HackatonDefinitelyNotDevelopers\\frontend\\src\\components\\Loading\\Spinner\\Spinner.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":10,"column":20,"nodeType":"96","messageId":"97","endLine":10,"endColumn":31},{"ruleId":"94","severity":1,"message":"98","line":10,"column":33,"nodeType":"96","messageId":"97","endLine":10,"endColumn":49},{"ruleId":"99","severity":1,"message":"100","line":35,"column":41,"nodeType":"101","endLine":35,"endColumn":43,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":1,"nodeType":"105","endLine":15,"endColumn":2},{"ruleId":"94","severity":1,"message":"106","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"107","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"108","line":2,"column":19,"nodeType":"96","messageId":"97","endLine":2,"endColumn":30},{"ruleId":"94","severity":1,"message":"109","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":43},{"ruleId":"94","severity":1,"message":"110","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":20},{"ruleId":"94","severity":1,"message":"111","line":4,"column":22,"nodeType":"96","messageId":"97","endLine":4,"endColumn":30},{"ruleId":"94","severity":1,"message":"112","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"113","line":13,"column":2},{"ruleId":"99","severity":1,"message":"100","line":11,"column":51,"nodeType":"101","endLine":11,"endColumn":53,"suggestions":"114"},{"ruleId":"90","replacedBy":"115"},{"ruleId":"92","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'predictText' is defined but never used.","Identifier","unusedVar","'fetchPlotSummary' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'connect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'fade' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mFormControl\u001b[39m from \u001b[32m'@material-ui/core/FormControl'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mSelect\u001b[39m from \u001b[32m'@material-ui/core/Select'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[36mimport\u001b[39m {predictFile} from \u001b[32m'../../store/actions'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[36mimport\u001b[39m {useDispatch} from \u001b[32m'react-redux'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m",["120"],["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},"Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},{"range":"126","text":"125"},[1109,1111],"[dispatch]",[399,401]]