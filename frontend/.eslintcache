[{"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/index.js":"1","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/reportWebVitals.js":"2","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/App.js":"3","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Layout/Layout.js":"4","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/SideBar/SideBar.js":"5","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/AppBar/AppBar.js":"6","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/actions.js":"7","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/actionTypes.js":"8","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/store.js":"9","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/reducer.js":"10","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Grid/Grid.js":"11","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Converter/Converter.js":"12","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/History/History.js":"13","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Stats/Stats.js":"14","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/TextArea/TextArea.js":"15"},{"size":802,"mtime":1610815668905,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610803519878,"results":"18","hashOfConfig":"17"},{"size":2211,"mtime":1610835946328,"results":"19","hashOfConfig":"17"},{"size":368,"mtime":1610804089041,"results":"20","hashOfConfig":"17"},{"size":4812,"mtime":1610835946320,"results":"21","hashOfConfig":"17"},{"size":2784,"mtime":1610835946144,"results":"22","hashOfConfig":"17"},{"size":3133,"mtime":1610832894879,"results":"23","hashOfConfig":"17"},{"size":569,"mtime":1610831543559,"results":"24","hashOfConfig":"17"},{"size":287,"mtime":1610820671443,"results":"25","hashOfConfig":"17"},{"size":1737,"mtime":1610832928614,"results":"26","hashOfConfig":"17"},{"size":613,"mtime":1610824286604,"results":"27","hashOfConfig":"17"},{"size":10110,"mtime":1610835946176,"results":"28","hashOfConfig":"17"},{"size":2754,"mtime":1610824221563,"results":"29","hashOfConfig":"17"},{"size":3318,"mtime":1610835713719,"results":"30","hashOfConfig":"17"},{"size":291,"mtime":1610824221563,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vz8yuu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/index.js",[],["68","69"],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/reportWebVitals.js",[],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/App.js",["70","71","72","73","74"],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Layout/Layout.js",["75","76","77","78","79","80"],"import React, { Component, Fragment } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport SideBar from '../SideBar/SideBar';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\n\nexport default function Layout() {\n\n    return (\n        <Fragment>\n            <SideBar>\n            </SideBar>\n        </Fragment >\n    );\n}","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/SideBar/SideBar.js",["81","82","83"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '../AppBar/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { toggleDrawer } from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: '#3792cb',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    backgroundColor: '#FFFFF',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    backgroundColor: \"#FFFFF\",\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(8) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n  },\n  listIcon: {\n    fontSize: '24px',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '32px',\n    },\n  }\n}));\n\nexport default function SideDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const open = useSelector(state => state.reducer.toggleDrawer);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        appClass={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        toggle={() => dispatch(toggleDrawer())}\n      >\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={() => dispatch(toggleDrawer())}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <NavLink to={'/Dashboard'}>\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon className={classes.listIcon}/>\n            </ListItemIcon>\n            <ListItemText primary={\"Dashboard\"} />\n          </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <NavLink to={'/predict'}>\n          <ListItem button>\n            <ListItemIcon>\n              <InboxIcon className={classes.listIcon}/>\n            </ListItemIcon>\n            <ListItemText primary={\"Digit Prediction\"} />\n          </ListItem>\n          </NavLink>\n        </List>\n      </Drawer>\n      <div className={classes.toolbar} />\n    </div>\n  );\n}","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/AppBar/AppBar.js",["84","85","86","87"],"import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  logo: {\n    fontSize: \"36px\",\n    margin: '0 10px',\n    fill: 'gold'\n  },\n  sectionDesktop: {\n    display: 'flex',\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        className={props.appClass}>\n        <Toolbar>\n          <IconButton\n            onClick={props.toggle}\n            edge=\"start\"\n            className={props.toggleButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <NightsStayIcon className={classes.logo}></NightsStayIcon>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            AppName\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n}","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/actions.js",[],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/actionTypes.js",[],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/store.js",[],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/store/reducer.js",["88"],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Grid/Grid.js",["89"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport './Grid.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Grid container spacing={3} className=\"Grid\">\n            <Grid item xs={12} md={6}>\n                {props.left}\n            </Grid>\n            <Grid item xs={12} md={6}>\n                {props.right}\n            </Grid>\n      </Grid>\n    </div>\n  );\n}","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Converter/Converter.js",["90","91"],"import React from 'react';\nimport TextArea from '../TextArea/TextArea';\nimport Grid from '../Grid/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {predictFile} from '../../store/actions';\nimport {useDispatch} from 'react-redux';\nimport ProgBar from './ProgBar';\nimport * as progressHandlers from './ProgBar';\nimport PropTypes from 'prop-types';\nimport {withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport InputIcon from '@material-ui/icons/Input';\nimport AddToQueueIcon from '@material-ui/icons/AddToQueue';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport './Converter.css';\n\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n      top: 22,\n    },\n    active: {\n      '& $line': {\n        backgroundImage:\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n      },\n    },\n    completed: {\n      '& $line': {\n        backgroundImage:\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n      },\n    },\n    line: {\n      height: 3,\n      border: 0,\n      backgroundColor: '#eaeaf0',\n      borderRadius: 1,\n    },\n  })(StepConnector);\n  \n  const useColorlibStepIconStyles = makeStyles({\n    root: {\n      backgroundColor: '#ccc',\n      zIndex: 1,\n      color: '#fff',\n      width: 50,\n      height: 50,\n      display: 'flex',\n      borderRadius: '50%',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    active: {\n      backgroundImage:\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n      backgroundImage:\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    },\n  });\n  \n  function ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const { active, completed } = props;\n  \n    const icons = {\n      1: <InputIcon />,\n      2: <AddToQueueIcon />,\n      3: <DoneOutlineIcon />,\n    };\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n          [classes.completed]: completed,\n        })}\n      >\n        {icons[String(props.icon)]}\n      </div>\n    );\n  }\n  \n  ColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node,\n  };\n  \n  function getSteps() {\n    return ['Select input type', 'Add input in choosen type', 'Enjoy the result & save it for later'];\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n      },\n    button: {\n      margin: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 150,\n      },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n\nconst Converter = (props) => {\n    const classes = useStyles();\n    const [file, setFile] = React.useState();\n    const [type, setType] = React.useState('');\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        setType(event.target.value);\n        handleFstToScd();\n    };\n\n    const handleSubmitProcessing = (event) => {\n        handleScdToThd();\n        dispatch(predictFile(file));\n    }\n\n    const handleFinish = (event) => {\n        handleReset()\n    }\n\n    const handleDelete = (event) => {\n        handleReset()\n    }\n\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n  \n    const handleFstToScd = () => {\n      setActiveStep((prevActiveStep) => 1);\n    };\n  \n    const handleScdToThd = () => {\n      setActiveStep((prevActiveStep) => 2);\n    };\n  \n    const handleReset = () => {\n      setActiveStep(0);\n    };\n\n\n    const stepsPath = (\n        <div className=\"card text-left DesktopOnly\">\n                <div className=\"card-body\">\n                    <p className=\"card-text\"></p>\n                    <div className={classes.root}>\n                        <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n                        {steps.map((label) => (\n                            <Step key={label}>\n                            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                            </Step>\n                        ))}\n                        </Stepper>\n                    </div>\n                </div>\n            </div>\n    );\n\n    const imageSelectedHandler = event => {\n        let reader = new FileReader();\n        let img = event.target.files[0];\n\n        reader.onloadend = () => {\n            setFile({\n                ...file,\n                selectedImage: img,\n                imagePreviewUrl: reader.result\n            });\n        }\n        reader.readAsDataURL(img);\n\n        console.log(img);\n    }\n\n\n    let userInput = null;\n    if(type === 'text'){\n        userInput = <TextArea rows={10} holder=\"Enter your text here...\"/>\n    }else if (type ==='file'){\n        userInput = (\n            <div className=\"card text-right\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Load file:</h5>\n                    <div className={classes.root}>\n                        <input\n                            accept=\"image/*,application/pdf\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            onChange={imageSelectedHandler}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"secondary\" component=\"span\" endIcon={<CloudUploadIcon/>}>\n                            Upload\n                            </Button>\n                        </label>\n                        </div>\n                </div>\n            </div>\n        );\n    }\n\n    const left = (\n        <div>\n            <div className=\"card text-left\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Choose input type:</h5>\n                    <p className=\"card-text\"></p>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Input type</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-outlined-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={type}\n                                onChange={handleChange}\n                                label=\"Age\"\n                                >\n                            <MenuItem value=\"\">\n                                <em>Choose input type</em>\n                            </MenuItem>\n                            <MenuItem value={'text'}>Text</MenuItem>\n                            <MenuItem value={'file'}>PDF/JPG</MenuItem>\n                            </Select>\n                        </FormControl>\n                </div>\n            </div><br/>\n\n            {userInput}\n\n            <br/>\n            <div className=\"card text-right\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Submit and proceed {type}</h5>\n                    <p className=\"card-text\"></p>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        onClick={handleSubmitProcessing}\n                        endIcon={<SendIcon/>}>\n                        Let's make it shorter\n                    </Button>\n                </div>\n            </div><br/>\n        </div>\n    );\n\n    const right = (\n        <div>\n            <TextArea rows={10} holder=\"\"/>\n            <br/>\n            <div className=\"card text-right\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Rate and save results (they will be stored in your history)</h5>\n                    <p className=\"card-text\"></p>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleFinish}\n                        className={classes.button}\n                        endIcon={<SaveIcon/>}>\n                        Save it, I'm satisfied\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleDelete}\n                        className={classes.button}\n                        endIcon={<DeleteIcon/>}>\n                        Delete fesult \n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n\n    return(\n        <div>  \n            {stepsPath}<br/>\n            <Grid left={left} right ={right}/>\n        </div>\n        \n    );\n}\n\nexport default Converter;","/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/History/History.js",[],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/Stats/Stats.js",["92","93","94","95","96"],"/home/npilis/Documents/HackatonDefinitelyNotDevelopers/frontend/src/components/TextArea/TextArea.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":19},{"ruleId":"101","severity":1,"message":"105","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":18},{"ruleId":"101","severity":1,"message":"106","line":10,"column":20,"nodeType":"103","messageId":"104","endLine":10,"endColumn":31},{"ruleId":"101","severity":1,"message":"107","line":10,"column":33,"nodeType":"103","messageId":"104","endLine":10,"endColumn":49},{"ruleId":"101","severity":1,"message":"108","line":37,"column":9,"nodeType":"103","messageId":"104","endLine":37,"endColumn":17},{"ruleId":"101","severity":1,"message":"109","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"110","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"111","line":2,"column":19,"nodeType":"103","messageId":"104","endLine":2,"endColumn":30},{"ruleId":"101","severity":1,"message":"112","line":2,"column":32,"nodeType":"103","messageId":"104","endLine":2,"endColumn":43},{"ruleId":"101","severity":1,"message":"113","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":20},{"ruleId":"101","severity":1,"message":"114","line":4,"column":22,"nodeType":"103","messageId":"104","endLine":4,"endColumn":30},{"ruleId":"101","severity":1,"message":"115","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":15},{"ruleId":"101","severity":1,"message":"116","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"117","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":16},{"ruleId":"101","severity":1,"message":"118","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":13},{"ruleId":"101","severity":1,"message":"120","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":16},{"ruleId":"101","severity":1,"message":"121","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":23,"column":1,"nodeType":"124","endLine":65,"endColumn":2},{"ruleId":"101","severity":1,"message":"125","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":14},{"ruleId":"101","severity":1,"message":"126","line":16,"column":8,"nodeType":"103","messageId":"104","endLine":16,"endColumn":15},{"ruleId":"101","severity":1,"message":"127","line":17,"column":13,"nodeType":"103","messageId":"104","endLine":17,"endColumn":29},{"ruleId":"101","severity":1,"message":"126","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"113","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":19},{"ruleId":"101","severity":1,"message":"107","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":26},{"ruleId":"101","severity":1,"message":"108","line":15,"column":11,"nodeType":"103","messageId":"104","endLine":15,"endColumn":19},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loadUser' is defined but never used.","'predictText' is defined but never used.","'fetchPlotSummary' is defined but never used.","'dispatch' is assigned a value but never used.","'Component' is defined but never used.","'connect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'fade' is defined but never used.","'Badge' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'ProgBar' is defined but never used.","'progressHandlers' is defined but never used.","no-global-assign","no-unsafe-negation"]